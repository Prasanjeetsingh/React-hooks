{"version":3,"sources":["context/auth-context.js","components/UI/Card.js","components/UI/LoadingIndicator.js","components/Ingredients/IngredientForm.js","components/Ingredients/IngredientList.js","components/UI/ErrorModal.js","hooks/http.js","components/Ingredients/Search.js","components/Ingredients/Ingredients.js","components/Auth.js","App.js","index.js"],"names":["AuthContext","React","createContext","isAuth","login","AuthContextProvider","props","useState","isAuthenticated","setIsAuthenticated","Provider","value","children","Card","className","LoadingIndicator","IngredientForm","memo","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","onSubmit","event","preventDefault","onAddIngredient","title","amount","htmlFor","type","id","onChange","target","loading","IngredientList","ingredients","map","ig","onClick","onRemoveItem","bind","ErrorModal","Fragment","onClose","initialState","error","data","extra","identifier","httpReducer","curHttpState","action","responseData","errorMessage","Error","useHttp","useReducer","httpState","dispatchHttp","clear","useCallback","sendRequest","url","method","body","reqExtra","reqIdentifier","fetch","headers","then","response","json","catch","isLoading","Search","inputRef","useRef","onLoadIngredients","enteredFilter","SetEnteredFilter","useEffect","loadedIngredients","key","push","timer","setTimeout","current","query","length","clearTimeout","ref","ingredientReducer","currentIngredients","ingredient","filter","ing","Ingredients","userIngredients","dispatch","name","filteredIngredientsHandler","filteredIngredients","addIngredientHandler","JSON","stringify","removeIngredientHandler","ingredientId","ingredientList","useMemo","Auth","authContext","useContext","App","content","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ac35a90.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nexport const AuthContext = React.createContext({\r\n  isAuth: false,\r\n  login: () => {}\r\n});\r\n\r\nconst AuthContextProvider = props => {\r\nconst [isAuthenticated , setIsAuthenticated] = useState(false);\r\n\r\nconst loginHandler = () => {\r\n  setIsAuthenticated(true);\r\n};\r\n\r\n  return (\r\n    <AuthContext.Provider value={{login: loginHandler , isAuth: isAuthenticated}}>\r\n        {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthContextProvider;\r\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './LoadingIndicator.css';\n\nconst LoadingIndicator = () => (\n  <div className=\"lds-ring\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import React , {useState} from 'react';\n\nimport Card from '../UI/Card';\nimport './IngredientForm.css';\nimport LoadingIndicator from '../UI/LoadingIndicator';\n\n\nconst IngredientForm = React.memo(props => {\n\n  const [enteredTitle, setEnteredTitle] =useState('');\n  const [enteredAmount, setEnteredAmount] =useState('');\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onAddIngredient({title: enteredTitle, amount: enteredAmount});\n  };\n\n  return (\n    <section className=\"ingredient-form\">\n      <Card>\n        <form onSubmit={submitHandler}>\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Name</label>\n            <input type=\"text\" id=\"title\" value={enteredTitle}\n            onChange={event => {\n               setEnteredTitle(event.target.value);\n            }}\n            />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"amount\">Amount</label>\n            <input type=\"number\" id=\"amount\" value={enteredAmount}\n            onChange={event => {\n              setEnteredAmount(event.target.value);\n            }}\n            />\n          </div>\n          <div className=\"ingredient-form__actions\">\n            <button type=\"submit\">Add Ingredient</button>\n           {props.loading && <LoadingIndicator/>}\n          </div>\n        </form>\n      </Card>\n    </section>\n  );\n});\n\nexport default IngredientForm;\n","import React from 'react';\n\nimport './IngredientList.css';\n\nconst IngredientList = React.memo(props => {\n  return (\n    <section className=\"ingredient-list\">\n      <h2>Loaded Ingredients</h2>\n      <ul>\n        {props.ingredients.map(ig => (\n          <li key={ig.id} onClick={props.onRemoveItem.bind(this, ig.id)}>\n            <span>{ig.title}</span>\n            <span>{ig.amount}x</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n});\n\nexport default IngredientList;\n","import React from 'react';\n\nimport './ErrorModal.css';\n\nconst ErrorModal = React.memo(props => {\n  return (\n    <React.Fragment>\n      <div className=\"backdrop\" onClick={props.onClose} />\n      <div className=\"error-modal\">\n        <h2>An Error Occurred!</h2>\n        <p>{props.children}</p>\n        <div className=\"error-modal__actions\">\n          <button type=\"button\" onClick={props.onClose}>\n            Okay\n          </button>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n});\n\nexport default ErrorModal;\n","import {useReducer , useCallback} from 'react';\r\n\r\nconst initialState =     {\r\n      loading: false ,\r\n       error: null ,\r\n      data: null,\r\n      extra: null,\r\n      identifier: null\r\n    };\r\n\r\nconst httpReducer = (curHttpState, action) => {\r\n  switch(action.type){\r\n    case 'SEND':\r\n      return { loading: true , error: null , data: null , extra: null , identifier: action.identifier};\r\n    case 'RESPONSE':\r\n      return {...curHttpState, loading:false , data: action.responseData , extra: action.extra};\r\n    case 'ERROR':\r\n     return{loading: false , error: action.errorMessage};\r\n    case 'CLEAR':\r\n     return initialState;\r\n    default:\r\n     throw new Error('Should not be reached!');\r\n  }\r\n};\r\n\r\nconst useHttp = () => {\r\n  const [httpState , dispatchHttp] = useReducer(httpReducer ,\r\n    {\r\n      loading: false ,\r\n       error: null ,\r\n      data: null,\r\n      extra: null,\r\n      identifier: null\r\n    });\r\n\r\nconst clear = useCallback(() => dispatchHttp({type: 'CLEAR'}), []\r\n  );\r\n\r\nconst sendRequest = useCallback((url , method , body , reqExtra , reqIdentifier) => {\r\n  dispatchHttp({type: 'SEND' , identifier: reqIdentifier});\r\n  fetch(\r\n    url,\r\n    {\r\n    method: method,\r\n    body: body,\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n  .then(response => {\r\n      return response.json();\r\n  })\r\n  .then(responseData => {\r\n    dispatchHttp({type: 'RESPONSE' , responseData: responseData , extra: reqExtra});\r\n  //   setuserIngredients(prevIngredients =>\r\n  //     prevIngredients.filter( ingredient => ingredient.id!==ingredientId)\r\n  // )\r\n  })\r\n  .catch(error => {\r\n  dispatchHttp({type: 'ERROR' , errorMessage: 'Something went wrong!'});\r\n});\r\n}, []);\r\n\r\nreturn {\r\n  isLoading: httpState.loading,\r\n  data: httpState.data,\r\n  error: httpState.error,\r\n  sendRequest: sendRequest,\r\n  reqExtra: httpState.extra,\r\n  reqIdentifier: httpState.identifier,\r\n  clear: clear\r\n};\r\n\r\n};\r\n\r\nexport default useHttp ;\r\n","import React, {useState , useEffect , useRef} from 'react';\nimport ErrorModal from '../UI/ErrorModal';\nimport Card from '../UI/Card';\nimport './Search.css';\nimport useHttp from '../../hooks/http';\nconst Search = React.memo(props => {\nconst inputRef = useRef();\nconst {onLoadIngredients} = props;\nconst [enteredFilter, SetEnteredFilter] = useState('');\nconst {isLoading , error , data , sendRequest , clear} = useHttp();\n\n\nuseEffect(() => {\n\n   if(!isLoading && !error && data ){\n     const loadedIngredients = [];\n     for(const key in data){\n       loadedIngredients.push({\n         id: key,\n         title: data[key].title,\n         amount: data[key].amount\n       });\n     }\n     onLoadIngredients(loadedIngredients);\n   }\n}, [data , error , isLoading , onLoadIngredients]);\n\nuseEffect(() => {\n\nconst timer = setTimeout(() => {\n\n  if(enteredFilter === inputRef.current.value){\n    const query =\n          enteredFilter.length === 0\n          ? ''\n          : `?orderBy=\"title\"&equalTo=\"${enteredFilter}\"`;\n\n\n      sendRequest('https://react-hook-update-f2705-default-rtdb.firebaseio.com/ingredients.json' + query,\n      'GET'\n    );\n\n  //     fetch('https://react-hook-update-f2705-default-rtdb.firebaseio.com/ingredients.json' + query)\n  //     .then(response => response.json())\n  //     .then(responseData => {\n  //       const loadedIngredients = [];\n  //       for(const key in responseData){\n  //         loadedIngredients.push({\n  //           id: key,\n  //           title: responseData[key].title,\n  //           amount: responseData[key].amount\n  //         });\n  //       }\n  //       onLoadIngredients(loadedIngredients);\n  //     });\n  }\n\n},500);\n\nreturn () => {\n  clearTimeout(timer);\n};\n\n}, [enteredFilter , sendRequest , inputRef]);\n\n  return (\n    <section className=\"search\">\n    {error && <ErrorModal  onClose={clear}>{error}</ErrorModal>}\n      <Card>\n        <div className=\"search-input\">\n          <label>Filter by Title</label>\n          {isLoading && <span>Loading... </span>}\n          <input\n           ref={inputRef}\n          type=\"text\" value={enteredFilter} onChange={event => SetEnteredFilter(event.target.value)}/>\n        </div>\n      </Card>\n    </section>\n  );\n});\n\nexport default Search;\n","import React , { useReducer , useState , useEffect , useCallback , useMemo} from 'react';\n\nimport IngredientForm from './IngredientForm';\nimport IngredientList from './IngredientList';\nimport Search from './Search';\nimport ErrorModal from '../UI/ErrorModal';\nimport useHttp from '../../hooks/http';\n\n\nconst ingredientReducer = (currentIngredients , action) => {\n  switch(action.type) {\n    case 'SET':\n     return action.ingredients;\n    case 'ADD':\n     return [...currentIngredients , action.ingredient];\n    case 'DELETE':\n     return currentIngredients.filter(ing => ing.id !== action.id);\n    default:\n      throw new Error('Should nor get there!');\n  }\n};\n\n// const httpReducer = (curHttpState, action) => {\n//   switch(action.type){\n//     case 'SEND':\n//       return { loading: true , error: null};\n//     case 'RESPONSE':\n//       return {...curHttpState, loading:false};\n//     case 'ERROR':\n//      return{loading: false , error: action.errorMessage};\n//     case 'CLEAR':\n//      return { ...curHttpState, error: null };\n//     default:\n//      throw new Error('Should not be reached!');\n//   }\n// };\n\nconst Ingredients = (props) => {\n\n  const {isLoading ,error , data , sendRequest , reqExtra , reqIdentifier,clear} = useHttp();\n\n  const [userIngredients, dispatch] = useReducer(ingredientReducer, []);\n  //const [httpState , dispatchHttp] = useReducer(httpReducer , {loading: false , error: null});\n\n\n  //const [userIngredients, setuserIngredients] = useState([]);\n  //const [isLoading , setIsLoading]=useState(false);\n  //const [error , setError] = useState();\n\n// ComponentDidMount\n\n// useEffect(() => {\n//   fetch('https://react-hook-update-f2705-default-rtdb.firebaseio.com/ingredients.json')\n//   .then(response => response.json())\n//   .then(responseData => {\n//     const loadedIngredients = [];\n//     for(const key in responseData){\n//       loadedIngredients.push({\n//         id: key,\n//         title: responseData[key].title,\n//         amount: responseData[key].amount\n//       });\n//     }\n//     setuserIngredients(loadedIngredients);\n//   });\n// }, []);\n\nuseEffect(() => {\n\n   if(!isLoading && !error && reqIdentifier === 'REMOVE_INGREDIENT'){\n     dispatch({type: 'DELETE' , id: reqExtra})\n   }\n   else if ( !isLoading && !error && reqIdentifier === 'ADD_INGREDIENT'){\n     dispatch({type: 'ADD' , ingredient: {id: data.name, ...reqExtra} });\n   }\n\n}, [data , reqExtra , reqIdentifier , error , isLoading]);\n\nconst filteredIngredientsHandler = useCallback(filteredIngredients => {\n  //setuserIngredients(filteredIngredients);\n  dispatch({type: 'SET' , ingredients: filteredIngredients});\n},[]);\n\n  const addIngredientHandler = useCallback(ingredient => {\n\n\n    sendRequest('https://react-hook-update-f2705-default-rtdb.firebaseio.com/ingredients.json', 'POST',\n    JSON.stringify(ingredient),\n    ingredient,\n    'ADD_INGREDIENT'\n  );\n\n\n\n    // fetch('https://react-hook-update-f2705-default-rtdb.firebaseio.com/ingredients.json', {\n    //   method: 'POST',\n    //   body: JSON.stringify(ingredient),\n    //   headers: {'Content-Type': 'application/json'}\n    // })\n    // .then(response => {\n    //   //dispatchHttp({type: 'RESPONSE'});\n    //   return response.json();\n    // })\n    // .then(responseData => {\n    //   // setuserIngredients(prevIngredients => [\n    //   //   ...prevIngredients,\n    //   //   {id: Math.random().toString(), ...ingredient}\n    //   // ]);\n    //\n    //   //dispatch({type: 'ADD' , ingredient: {id: Math.random().toString(), ...ingredient} });\n    // });\n\n  },[sendRequest]);\n\nconst removeIngredientHandler = useCallback(ingredientId => {\n\n\nsendRequest(`https://react-hook-update-f2705-default-rtdb.firebaseio.com/ingredients/${ingredientId}.json`,\n  'DELETE',\n  null,\n  ingredientId,\n  'REMOVE_INGREDIENT'\n);\n},[sendRequest]);\n\n// const clearError = useCallback(() => {\n// //dispatchHttp({type: 'CLEAR'});\n// },[]);\n\nconst ingredientList  = useMemo(() => {\n  return (\n            <IngredientList ingredients={userIngredients} onRemoveItem={removeIngredientHandler} />\n  );\n}, [userIngredients , removeIngredientHandler]);\n\n  return (\n    <div className=\"App\">\n    {error && <ErrorModal onClose={clear}> {error} </ErrorModal>}\n      <IngredientForm onAddIngredient={addIngredientHandler} loading={isLoading}/>\n\n      <section>\n        <Search onLoadIngredients={filteredIngredientsHandler}/>\n        {ingredientList}\n      </section>\n    </div>\n  );\n}\n\nexport default Ingredients;\n","import React, {useContext} from 'react';\n\nimport {AuthContext} from '../context/auth-context';\nimport Card from './UI/Card';\nimport './Auth.css';\n\nconst Auth = props => {\n const authContext = useContext(AuthContext);\nconst loginHandler = () => {\n  authContext.login();\n};\n\n  return (\n    <div className=\"auth\">\n      <Card>\n        <h2>You are not authenticated!</h2>\n        <p>Please log in to continue.</p>\n        <button onClick={loginHandler}>Log In</button>\n      </Card>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, {useContext} from 'react';\n\nimport Ingredients from './components/Ingredients/Ingredients';\nimport Auth from './components/Auth';\nimport {AuthContext} from './context/auth-context';\n\n\n\n\nconst App = props => {\n\n  const authContext = useContext(AuthContext);\n\n  let content = <Auth /> ;\n  if(authContext.isAuth){\n    content = <Ingredients/>;\n  }\n  return content;\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AuthContextProvider from './context/auth-context';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <AuthContextProvider>\n  <App />\n  </AuthContextProvider>\n  , document.getElementById('root'));\n"],"sourceRoot":""}